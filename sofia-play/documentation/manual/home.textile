h1. Sofia

Sofia is a typesafe (ish) layer on top of a properties file.  Given a properties file, it will generate a java class providing compile time checks that you're using values that actually exist in your properties file.  It supports multiple locales if you provide them.

A simple example looks like this.  Consider this conf/messages file:

bc..     test.property=I'm the first test property
    parameterized.property.long.name=I need parameters {0} and {1}
    new.property=New Property
    date.property=Today''s date {0,date,full} and now a number {1,number}

p. Sofia will generate app/utils/Messages.java with the following interface:

bc..     public class Messages {
        public static String dateProperty(java.util.Date arg0, Number arg1, Locale... locale) { }
        public static String newProperty(Locale... locale) { }
        public static String parameterizedPropertyLongName(Object arg0, Object arg1, Locale... locale) { }
        public static String testProperty(Locale... locale) { }
    }

p. There are some other details but they're mostly irrelevant.  Feel free to explore the generated file if you're *really* interested.  What you see here is one method for each property listed in your properties file.  Those properties that take parameters result in methods that take parameters as well.  Notice that each parameter is typed according to the formatting specified in the properties file.  If no formatting is defined, "Object" is used for that parameter type.

Also note that each method takes a Locale... parameter.  This allows sofia to generate one method per property while supporting an optional Locale to be supplied without having to generate two identical methods or having to pass in a null to a "singleton" parameter.  Multiple Locales can be passed in but only one will be used.

h2. Getting started

Just bring your application up and Sofia will track changes to your messages file and regenerate accordingly. Sometimes however you might need to force a regeneration.  (e.g., when checking out a project from github that already has uses of the generated file).  You can force this regeneration by running the command "play sofia:generate"

h2. Configuration

No configuration is necessary.

h2. Usage

Just add your entries to conf/messages and Sofia will do the rest.  You can then use the generated in your class as simply as:

bc..        throw new Exception(Messages.newProperty());

h2. Commands

h3. sofia:generate

Process conf/messages explicitly.